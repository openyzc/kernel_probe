In do_mmap(), there are these code :

unsigned long do_mmap(struct file *file, unsigned long addr,
			unsigned long len, unsigned long prot,
			unsigned long flags, vm_flags_t vm_flags,
			unsigned long pgoff, unsigned long *populate,
			struct list_head *uf)
{
	...
	if (flags & MAP_NORESERVE) {
		/* We honor MAP_NORESERVE if allowed to overcommit */
		if (sysctl_overcommit_memory != OVERCOMMIT_NEVER)
			vm_flags |= VM_NORESERVE;

		/* hugetlb applies strict overcommit unless MAP_NORESERVE */
		if (file && is_file_hugepages(file))
			vm_flags |= VM_NORESERVE;
	}
	...
}

As for this MAP_NORESERVE, there are describtion in the manual :

       MAP_NORESERVE
              Do not reserve swap space for this mapping.  When swap space  is
              reserved,  one  has  the guarantee that it is possible to modify
              the mapping.  When swap space is  not  reserved  one  might  get
              SIGSEGV  upon  a  write if no physical memory is available.  See
              also the discussion of the  file  /proc/sys/vm/overcommit_memory
              in  proc(5).   In  kernels before 2.6, this flag had effect only
              for private writable mappings.

So, this is relevant to the overcommit. You can refer to this to find some info
about overcommit:
	linuxperf.com/?p=102

We know that, overcommit mechanism will check whether the memory request is
permittable for current kernel memory ammount. This will be done by this path:

	security_vm_enough_memory_mm --> __vm_enough_memory

	The __vm_enough_memory() will increase the 'vm_committed_as' which makes
effect on the overcommit judegement when 'sysctl_overcommit_memory' is
OVERCOMMIT_NEVER;

If ok, the request memory amount will be added to the counter also.

But for shmem, if the VM flags has 'VM_NORESERVE',
security_vm_enough_memory_mm() will be bypast :

static inline int shmem_acct_size(unsigned long flags, loff_t size)
{
	return (flags & VM_NORESERVE) ?
		0 : security_vm_enough_memory_mm(current->mm, VM_ACCT(size));
}

And for normal mmap, the VM_NORESERVE also plays a role in mmap_region():
	if (accountable_mapping(file, vm_flags)) {
		charged = len >> PAGE_SHIFT;
		if (security_vm_enough_memory_mm(mm, charged))
			return -ENOMEM;
		vm_flags |= VM_ACCOUNT;
	}

static inline int accountable_mapping(struct file *file, vm_flags_t vm_flags)
{
	/*
	 * hugetlb has its own accounting separate from the core VM
	 * VM_HUGETLB may not be set yet so we cannot check for that flag.
	 */
	if (file && is_file_hugepages(file))
		return 0;

	return (vm_flags & (VM_NORESERVE | VM_SHARED | VM_WRITE)) == VM_WRITE;
}


So, in summary, when VM_NORESERVE is enabled, then those VM area will not be
accounted into the 'vm_committed_as' for the overcommit checking.




